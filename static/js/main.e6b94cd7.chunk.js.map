{"version":3,"sources":["components/Child_DropDown.js","components/Parent_DropDown.js","App.js","store/reducer.js","serviceWorker.js","index.js"],"names":["MenuList","components","CustomMenuList","props","ariaAttributes","selectProps","style","padding","boxSizing","class","display","float","marginTop","width","marginLeft","type","autoCorrect","autoComplete","spellCheck","value","inputValue","placeholder","onChange","e","onInputChange","currentTarget","handleChange","onMouseDown","stopPropagation","target","focus","onTouchEnd","onFocus","onMenuInputFocus","Child_DropDown","state","isFocused","inputFocus","setState","option","val","onDocumentClick","menu","containerRef","current","querySelector","contains","React","createRef","bind","toObject","document","addEventListener","this","removeEventListener","arr","rv","i","length","undefined","menuIsOpen","countries","objCountries","map","item","label","ref","className","classNamePrefix","name","options","isSearchable","defaultMenuIsOpen","PureComponent","memo","dispatch","useDispatch","keySave","a","axios","get","then","res","catch","err","paddingLeft","onClick","Parent_DropDown","App","useState","isChecked","setCheck","setCountries","globalStore","useSelector","displayMessage","title","msg","store","addNotification","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","fetchList","data","error","useEffect","status","console","log","inputRef","useRef","Container","fluid","Row","checked","color","Col","connect","statusChange","statusInit","initialState","reducer","action","newState","Boolean","window","location","hostname","match","createStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6b94cd7.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport Select, { components } from \"react-select\";\nimport { debounce } from 'throttle-debounce';\nconst { MenuList} = components;\nconst CustomMenuList = props => {\n  // Copied from source\n  const ariaAttributes = {\n    \"aria-autocomplete\": \"list\",\n    \"aria-label\": props.selectProps[\"aria-label\"],\n    \"aria-labelledby\": props.selectProps[\"aria-labelledby\"]\n  };\n  const handleChange = e => {\n    props.selectProps.onInputChange(e.currentTarget.value)\n  }\n  return (\n    <div >\n      <div style={{ padding: 5, boxSizing: \"border-box\" }}>\n        <div class=\"input-group\" style={{ display: \"block\" }}>\n          <i class=\"fas fa-search\" style={{ float: \"left\", \"font-size\": \"20px\", marginTop: \"8px\" }}></i>\n          <div class=\"input-group-append\" style={{ \"line-height\": \"35px\" }}>\n            <input\n              style={{\n                width: \"100%\",\n                boxSizing: \"border-box\",\n                marginLeft: \"4px\",\n                \"font-family\": \"Arial, FontAwesome\"\n              }}\n              type=\"text\"\n              autoCorrect=\"off\"\n              autoComplete=\"off\"\n              spellCheck=\"false\"\n              value={props.selectProps.inputValue}\n              placeholder=\"Search...\"\n              // onChange={e =>\n              //   props.selectProps.onInputChange(e.currentTarget.value, {\n              //     action: \"input-change\"\n              //   })\n              // }\n              onChange={e => {\n                // don't nullify the event object\n                // e.persist();\n                // debounce(1000, () => handleChange(e))();\n                handleChange(e);\n              }\n              }\n              onMouseDown={e => {\n                e.stopPropagation();\n                e.target.focus();\n              }}\n              onTouchEnd={e => {\n                e.stopPropagation();\n                e.target.focus();\n              }}\n              onFocus={props.selectProps.onMenuInputFocus}\n              {...ariaAttributes}\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ \"text-align\": \"left\" }}>\n        <MenuList  {...props} />\n      </div>\n    </div>\n  );\n};\n\nexport default class Child_DropDown extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.containerRef = React.createRef();\n    this.onDocumentClick = this.onDocumentClick.bind(this);\n    this.toObject = this.toObject.bind(this);\n  }\n\n  state = { isFocused: false };\n\n  inputFocus = e => this.setState({ isFocused: true });\n  onChange = option => this.setState({ isFocused: false });\n  onInputChange = val => this.setState({ inputValue: val });\n\n  onDocumentClick = e => {\n    // e.persist();\n    var menu = this.containerRef.current.querySelector(\".select__menu\");\n\n    if (\n      !this.containerRef.current.contains(e.target) ||\n      !menu ||\n      !menu.contains(e.target)\n    ) {\n      this.setState({ isFocused: false, inputValue: \"\" });\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.onDocumentClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.onDocumentClick);\n  }\n  toObject(arr) {\n    var rv = {};\n    for (var i = 0; i < arr.length; ++i)\n      rv[arr[i]] = arr[i];\n    return rv;\n  }\n\n  render() {\n    var props = {\n      isFocused: this.state.isFocused || undefined,\n      menuIsOpen: this.state.isFocused || undefined\n    };\n    if (this.props.countries) {\n      const { countries: counlist } = this.props.countries;\n      let objCountries = counlist.map(item => { return { value: item, label: item } })\n      \n      return (\n        <div ref={this.containerRef}>\n          <Select\n            className=\"basic-single\"\n            classNamePrefix=\"select\"\n            name=\"color\"\n            options={objCountries}\n            components={{\n              MenuList: CustomMenuList\n            }}\n            inputValue={this.state.inputValue}\n            isSearchable={false}\n            defaultMenuIsOpen={true}\n            onMenuInputFocus={this.inputFocus.bind(this)}\n            onChange={this.onChange.bind(this)}\n            onInputChange={this.onInputChange.bind(this)}\n            {...props}\n          />\n        </div>\n      );\n    }\n    else { return false }\n  }\n}\n","import React, { PureComponent} from \"react\";\nimport Select, { components } from \"react-select\";\nimport { useDispatch } from 'react-redux'\nimport axios from 'axios';\n\nconst { MenuList} = components;\nconst CustomMenuList = React.memo((props) => {\n  const value = props.selectProps.inputValue;\n  const dispatch = useDispatch()\n  // Copied from source\n  const keySave = async (value) => {\n    await axios\n      .get('http://13.57.235.126:5000/addcountry?name=' + value)\n        .then(res => {\n        // Try this => set only if not equal to 200\n         dispatch({ type: 'Update status' })\n        // console.log(res.response.status)\n      })\n        .catch(err => {\n        // console.log(err.response.status)\n      })\n  }\n  const ariaAttributes = {\n    \"aria-autocomplete\": \"list\",\n    \"aria-label\": props.selectProps[\"aria-label\"],\n    \"aria-labelledby\": props.selectProps[\"aria-labelledby\"]\n  };\n  const handleChange = e => {\n    props.selectProps.onInputChange(e.currentTarget.value)\n  }\n  return (\n    <div>\n      <div style={{ padding: 5, boxSizing: \"border-box\" }}>\n        <div class=\"input-group\" style={{ display: \"grid\", \"grid-template-columns\": \"1fr 24fr 1fr\", \"grid-gap\": \"4px\" }}>\n          <i class=\"fas fa-search\" style={{ float: \"left\", \"font-size\": \"20px\", marginTop: \"8px\" }}></i>\n          <div class=\"input-group-append\" style={{ \"line-height\": \"35px\" }}>\n            <input\n              style={{\n                width: \"100%\",\n                paddingLeft: \"8px\",\n                boxSizing: \"border-box\",\n                \"font-family\": \"Arial, FontAwesome\"\n              }}\n              type=\"text\"\n              autoCorrect=\"off\"\n              autoComplete=\"off\"\n              spellCheck=\"false\"\n              value={value}\n              placeholder=\"Search...\"\n              // onChange={e =>\n              //   props.selectProps.onInputChange(e.currentTarget.value, {\n              //     action: \"input-change\"\n              //   })\n              // }\n              onChange={e => {\n                // don't nullify the event object\n                // e.persist();\n                // debounce(1000, () => handleChange(e))();\n                handleChange(e);\n              }\n              }\n              onMouseDown={e => {\n                e.stopPropagation();\n                e.target.focus();\n              }}\n              onTouchEnd={e => {\n                e.stopPropagation();\n                e.target.focus();\n              }}\n              onFocus={props.selectProps.onMenuInputFocus}\n              {...ariaAttributes}\n            />\n          </div>\n          <div class=\"input-group-append\" style={{ \"line-height\": \"35px\" }}>\n            <button style={{ paddingLeft: \"5px\", \"background-color\": \"#fff\", \"border\": \"none\", \"font-size\": \"20px\" }} onClick={() => keySave(value)}>\n              <i class=\"fas fa-save\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div style={{ \"text-align\": \"left\" }}>\n        <MenuList  {...props} />\n      </div>\n    </div>\n  );\n}\n)\n\nexport default class Parent_DropDown extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.containerRef = React.createRef();\n    this.onDocumentClick = this.onDocumentClick.bind(this);\n    this.toObject = this.toObject.bind(this);\n  }\n  state = { isFocused: false };\n  inputFocus = e => this.setState({ isFocused: true });\n  onChange = option => this.setState({ isFocused: false });\n  onInputChange = val => this.setState({ inputValue: val });\n  onDocumentClick = e => {\n    // e.persist();\n    var menu = this.containerRef.current.querySelector(\".select__menu\");\n\n    if (\n      !this.containerRef.current.contains(e.target) ||\n      !menu ||\n      !menu.contains(e.target)\n    ) {\n      this.setState({ isFocused: false, inputValue: \"\" });\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.onDocumentClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.onDocumentClick);\n  }\n  toObject(arr) {\n    var rv = {};\n    for (var i = 0; i < arr.length; ++i)\n      rv[arr[i]] = arr[i];\n    return rv;\n  }\n\n  render() {\n    var props = {\n      isFocused: this.state.isFocused || undefined,\n      menuIsOpen: this.state.isFocused || undefined\n    };\n    if (this.props.countries) {\n      const { countries: counlist } = this.props.countries;\n      let objCountries = counlist.map(item => { return { value: item, label: item } })\n      return (\n        <div ref={this.containerRef}>\n          <Select\n            className=\"basic-single\"\n            classNamePrefix=\"select\"\n            name=\"color\"\n            options={objCountries}\n            components={{\n              MenuList: CustomMenuList\n            }}\n            inputValue={this.state.inputValue}\n            isSearchable={false}\n            onMenuInputFocus={this.inputFocus.bind(this)}\n            onChange={this.onChange.bind(this)}\n            onInputChange={this.onInputChange.bind(this)}\n            {...props}\n          />\n        </div>\n      );\n    }\n    else { return false }\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Child_DropDown from './components/Child_DropDown';\nimport Parent_DropDown from './components/Parent_DropDown';\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport { store } from 'react-notifications-component';\nimport { connect, useSelector, useDispatch } from 'react-redux'\nimport axios from 'axios';\nimport './App.css';\n\nconst App = React.memo(() => {\n  const [isChecked, setCheck] = useState(false);\n  const [countries, setCountries] = useState();\n  const globalStore = useSelector(globalStore => globalStore);\n  const dispatch = useDispatch();\n  const handleChange = () => {\n    setCheck(!isChecked);\n  }\n  const displayMessage = (title, type, msg) => {\n    store.addNotification({\n      title: title,\n      message: msg,\n      type: type,\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 4000,\n        onScreen: true\n      }\n    });\n  }\n  const fetchList = async () => {\n    await axios.get('http://13.57.235.126:5000/countries')\n      .then(res => {\n        setCountries(res.data)\n        // console.log(res.response.status);\n      })\n      .catch(function (error) {\n      });\n  }\n  // const createFunction = useCallback(\n  //   () => {\n  //     fetchList();\n  //   },\n  //   [globalStore.status]\n  // )\n  // useEffect(() => {\n  //   createFunction();\n  // }, [createFunction])\n\n  useEffect(() => {\n    fetchList();\n  }, [])\n  useEffect(() => {\n    if (globalStore.status === '200')\n      fetchList();\n    return () => {\n      dispatch({ type: 'Init status' })\n    };\n  }, [globalStore.status])\n\n  if (globalStore.status === '200')\n    displayMessage(\"Saved!\", \"success\", \"Country name added to the list.\");\n  \n  console.log(\"From Redux Store\" + \" \" + globalStore.status);\n  const inputRef = useRef(null);\n  // return useMemo(() => {\n  return (\n    <Container fluid=\"md\" style={{ marginTop: \"35px\" }}>\n      <ReactNotification />\n      <Row>\n        <label>\n          <input ref={inputRef} checked={isChecked} onChange={handleChange} className=\"switch\" type=\"checkbox\" />\n          <div>\n            <div></div>\n          </div>\n        </label>\n        <label style={{ paddingLeft: \"20px\", \"font-size\": \"30px\", color: \"#3b89ec\" }}>{isChecked ? 'User with Add privilege' : 'User without Add privilege'}</label>\n      </Row>\n      <Row style={{ marginTop: \"35px\" }}>\n        <Col style={{ width: \"100%\" }}>\n          <Child_DropDown countries={countries} />\n        </Col>\n        <Col>{isChecked && <Parent_DropDown countries={countries} displayMessage={displayMessage} />}</Col>\n      </Row>\n    </Container>\n  );\n  // }, [globalStore.status])\n})\n\nconst mapStatetoProps = state => {\n  return {\n    status: state.status\n  }\n}\nconst mapDispatchtoProps = dispatch => {\n  return {\n    statusChange: () => dispatch({ type: 'Update status' }),\n    statusInit: () => dispatch({ type: 'Init status' })\n  }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(App);","const initialState = {\n    status: '500'\n}\n\nconst reducer = (state = initialState, action) => {\n    const newState = {...state}\n    if (action.type === 'Update status') {\n        newState.status = '200' \n    }\n    if (action.type === 'Init status') {\n        newState.status = '500' \n    }    \n    return newState\n}\n\nexport default reducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport reducer from './store/reducer';\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\n\nconst globalStore = createStore(reducer)\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={globalStore}>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}